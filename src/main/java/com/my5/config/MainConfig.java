package com.my5.config;/* @author hzy @DESCRIPTION ${DESCRIPTION} @create 2020/5/6*/import com.my.Person;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.context.annotation.Import;@Configuration@Import(value = {com.my5.bean.Dog.class, com.my5.bean.Cat.class,MyImportSelector.class,MyImportBeanDefinitionRegistrar.class})public class MainConfig {    /**     * 向IOC容器中添加组件的三种方式：     * 1.@Bean/beans.xml 导入第三方的类或者包的方式，比如person     * 2.包扫描+组件的注解方式  (@ComponentScan : @Controller @Service @Reponsitory @Component),一般是针对于为我们自己写的类，使用这个注入到里面     * 3.@Import     *          1.value={bean的class}   快速给容器中导入一个或多个组件 bean的id默认为全类名(com.my.xxx) 注意@bean的注入方式有点简单     *          2.value={实现了ImportSelector接口的类}  ImportSelector是一个接口返回需要导入容器的全类名数组     *          3.value={实现了ImportBeanDefinitionRegistrar接口的类} ImportBeanDefinitionRegistrar 在接口中定义其他bean，并注册到容器中     */    // 给容器中注入一个bean，类型为该方法的返回值类型，默认创建方式是单实例    @Bean    public Person person(){        System.out.println("向容器中注入对象person");        return new Person("person",24);    }}